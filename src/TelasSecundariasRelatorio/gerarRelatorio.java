/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelasSecundariasRelatorio;

import codigo.ImprimirArquivo;
import codigo.Jogo;
import codigo.Venda;
import codigo.Relatorio;
import java.io.BufferedWriter;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Eduardo
 */
public class gerarRelatorio extends javax.swing.JFrame {
    ArrayList<Jogo> jogos = new ArrayList<>();
    /**
     * Creates new form gerarRelatorio
     */
    public gerarRelatorio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        relatorioDeVendas = new javax.swing.JLabel();
        nomeDoJogo = new javax.swing.JLabel();
        qtDeMidFis = new javax.swing.JLabel();
        qtEmEstoque = new javax.swing.JLabel();
        totalVendas = new javax.swing.JLabel();
        valTotalVendas = new javax.swing.JLabel();
        salvar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        texQtDeMidFis = new javax.swing.JTextField();
        texQtEmEstoque = new javax.swing.JTextField();
        texTotalVendas = new javax.swing.JTextField();
        texValTotal = new javax.swing.JTextField();
        pesquisar = new javax.swing.JButton();
        JCNomeJogos = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        relatorioDeVendas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        relatorioDeVendas.setText("Relatorio de vendas");

        nomeDoJogo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nomeDoJogo.setText("Jogo:");

        qtDeMidFis.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        qtDeMidFis.setText("Quantidade inicial de midia fisica:");

        qtEmEstoque.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        qtEmEstoque.setText("Quantidade de midia fisica em estoque:");

        totalVendas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        totalVendas.setText("Total de vendas(midia fisica e digital):");

        valTotalVendas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        valTotalVendas.setText("Valor total de vendas:");

        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        texTotalVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                texTotalVendasActionPerformed(evt);
            }
        });

        pesquisar.setText("Pesquisar");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });

        JCNomeJogos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        JCNomeJogos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Jogos", "DLCs", "Geral" }));
        JCNomeJogos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCNomeJogosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(salvar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(relatorioDeVendas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nomeDoJogo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JCNomeJogos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pesquisar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(valTotalVendas)
                                    .addComponent(totalVendas))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(texValTotal)
                                    .addComponent(texTotalVendas)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(qtEmEstoque)
                                    .addComponent(qtDeMidFis))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(texQtDeMidFis, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                                    .addComponent(texQtEmEstoque))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(relatorioDeVendas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeDoJogo)
                    .addComponent(pesquisar)
                    .addComponent(JCNomeJogos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qtDeMidFis)
                    .addComponent(texQtDeMidFis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qtEmEstoque)
                    .addComponent(texQtEmEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalVendas)
                    .addComponent(texTotalVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valTotalVendas)
                    .addComponent(texValTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvar)
                    .addComponent(cancelar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
    ArrayList<Relatorio> rel = new ArrayList<>();
        File arq = new File("relatorio.txt");
        
        

        String nome = JCNomeJogos.getSelectedItem().toString();
        String quantidade = texQtEmEstoque.getText();
        String estoque = texQtDeMidFis.getText();
        String totalVen = texTotalVendas.getText();
        String valorTotal = texValTotal.getText() ;       
        
        
        try {

            if (!arq.exists()) {

                if (arq.createNewFile()) {
                    System.out.println("O arquivo foi criado");
                } else {
                    System.out.println("O arquivo nÃ£o foi criado");
                }

            }
            
           FileWriter fo = new FileWriter(arq, true);
           BufferedWriter escreve = new BufferedWriter(fo); 
           escreve.write("\t\t\tRELATÓRIO");
           escreve.write("\n\nNome do jogo:" + nome);
           escreve.write("\n\nQuantidade inicial de midia fisica: " + quantidade);
           escreve.write("\n\nQuantidade de midia fisica em estoque:" + estoque);
           escreve.write("\n\nTotal de vendas(midia fisica e digital):" + totalVen);
           escreve.write("\n\nValor total de vendas:" + valorTotal);
           
           
            escreve.flush();
            escreve.close();
            
            JOptionPane.showMessageDialog(null, "Relatório Gerado");
            
            ImprimirArquivo imprimir = new ImprimirArquivo();
            imprimir.imprimeArquivo("relatorio.txt");
            
            this.dispose();

        }catch (IOException ex) {
            ex.printStackTrace();
        }
       
            this.dispose();
    }//GEN-LAST:event_salvarActionPerformed

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
        
        String opcao = JCNomeJogos.getSelectedItem().toString();
        int preco = 0;
        int estoqueIni = 0;
        int estoqueAtual = 0;
        int contEstoqueIni = 0;
        int contEstoqueAtual = 0;
        int diferenca = 0;        
        
        ArrayList<Jogo>jogos = new ArrayList<>();
        
        if(JCNomeJogos.getSelectedItem().toString().equals("Selecionar")){
            JOptionPane.showMessageDialog(null,"Informe o nome do jogo que deseja procurar.");
        }
        else{
            try{
                FileInputStream fips=new FileInputStream("dadosJogo.txt");                
                ObjectInputStream obj=new ObjectInputStream(fips);
                jogos =(ArrayList<Jogo>)obj.readObject();//Carrega o arquivo txt no arrayList
                
                if(JCNomeJogos.getSelectedItem().toString().equals("Jogos")){
                    for (int i = 0; i < jogos.size(); i++){
                        if(jogos.get(i).getTipo().equals("Jogo")){
                            estoqueAtual = Integer.parseInt(jogos.get(i).getQuantidade());
                            estoqueIni = Integer.parseInt(jogos.get(i).getEstoque());
                            contEstoqueIni = contEstoqueIni + estoqueIni;
                            contEstoqueAtual = contEstoqueAtual + estoqueAtual;
                        }
                    }
                    
                    texQtDeMidFis.setEnabled(false); 
                    texQtEmEstoque.setEnabled(false);
                    texQtDeMidFis.setText(Integer.toString(contEstoqueIni));
                    texQtEmEstoque.setText(Integer.toString(contEstoqueAtual));
                    
                }
                else if(JCNomeJogos.getSelectedItem().toString().equals("DLCs")){
                   for (int i = 0; i < jogos.size(); i++){
                        if(jogos.get(i).getTipo().equals("DLC")){
                            estoqueAtual = Integer.parseInt(jogos.get(i).getQuantidade());
                            estoqueIni = Integer.parseInt(jogos.get(i).getEstoque());
                            contEstoqueIni = contEstoqueIni + estoqueIni;
                            contEstoqueAtual = contEstoqueAtual + estoqueAtual;
                        }
                    }
                    
                    texQtDeMidFis.setEnabled(false); 
                    texQtEmEstoque.setEnabled(false);
                    texQtDeMidFis.setText(Integer.toString(contEstoqueIni));
                    texQtEmEstoque.setText(Integer.toString(contEstoqueAtual));
                }
                else if(JCNomeJogos.getSelectedItem().toString().equals("Geral")){
                   for (int i = 0; i < jogos.size(); i++){                       
                        estoqueAtual = Integer.parseInt(jogos.get(i).getQuantidade());
                        estoqueIni = Integer.parseInt(jogos.get(i).getEstoque());
                        contEstoqueIni = contEstoqueIni + estoqueIni;
                        contEstoqueAtual = contEstoqueAtual + estoqueAtual;                        
                    }
                    
                    texQtDeMidFis.setEnabled(false); 
                    texQtEmEstoque.setEnabled(false);
                    texQtDeMidFis.setText(Integer.toString(contEstoqueIni));
                    texQtEmEstoque.setText(Integer.toString(contEstoqueAtual));
                }
                else{
                    for (int i = 0; i < jogos.size(); i++){
                        if(jogos.get(i).getNome().equals(opcao)){
                            estoqueAtual = Integer.parseInt(jogos.get(i).getQuantidade());
                            estoqueIni = Integer.parseInt(jogos.get(i).getEstoque());
                            contEstoqueIni = contEstoqueIni + estoqueIni;
                            contEstoqueAtual = contEstoqueAtual + estoqueAtual;
                            preco = Integer.parseInt(jogos.get(i).getPreco());
                        }
                    }
                    diferenca = estoqueIni - estoqueAtual;
                    
                    texQtDeMidFis.setEnabled(false); 
                    texQtEmEstoque.setEnabled(false);
                    texValTotal.setEnabled(false);
                    texQtDeMidFis.setText(Integer.toString(contEstoqueIni));
                    texQtEmEstoque.setText(Integer.toString(contEstoqueAtual));
                    texValTotal.setText(Integer.toString((preco*diferenca)));
                }
            }
            catch(FileNotFoundException ex){
                JOptionPane.showMessageDialog(null, "Ocorreu um erro na manipulação do arquivo");
            }
            catch(IOException e){
                JOptionPane.showMessageDialog(null, "Ocorreu um erro na manipulação do arquivo");
            } 
            catch (ClassNotFoundException ex) {
                Logger.getLogger(gerarRelatorio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        /*String pesquisa = new String();
        String quantidade = "";
        String estoque = "";
        String preco2 = "";
        double preco = 0;
        String form = "";
        
        int cont=0;
        int contmid = 0;
        double ax = 0;
        double ax2 = 0;
        String auxContMid ="";
        
        ArrayList<Jogo>aux = new ArrayList<>();
        ArrayList<Venda> auxVenda = new ArrayList<>();
        
         if (!JCNomeJogos.getSelectedItem().toString().equals("")) {
             pesquisa = JCNomeJogos.getSelectedItem().toString();
            for (Jogo jogo : aux) {
                if (jogo.getNome().equals(JCNomeJogos.getSelectedItem().toString())) {
                    preco = Double.parseDouble(jogo.getPreco());
                }
            }
        
        if(JCNomeJogos.getSelectedItem().toString().equals("Selecionar")){
            JOptionPane.showMessageDialog(null,"Informe o nome do jogo que deseja procurar.");
        }
        else{
            try{
                FileInputStream fips=new FileInputStream("dadosJogo.txt");
                FileInputStream fvenda = new FileInputStream("dadosComprasBemSucedidas.txt");
                ObjectInputStream obj=new ObjectInputStream(fips);
                ObjectInputStream ovenda = new ObjectInputStream(fvenda);
                aux =(ArrayList<Jogo>)obj.readObject();//Carrega o arquivo txt no arrayList
                auxVenda = (ArrayList<Venda>) ovenda.readObject();
                for(Jogo game:aux){
                    if(game.getNome().equals(pesquisa)){
                        quantidade = game.getQuantidade();
                        estoque = game.getEstoque();
                       
                        cont = 1;
                    }
                }
                for(Venda sell :auxVenda ){
                    if(sell.getNome().equals(pesquisa)){
                        contmid ++;
                    }
                }
                
                ax2= ax*contmid;
                
                auxContMid = Integer.toString(contmid);
                
                if(cont == 1){
                    this.setVisible(true);
                    nomeDoJogo.setEnabled(false);
                    texQtDeMidFis.setEnabled(false); 
                    texQtEmEstoque.setEnabled(false);
                    texTotalVendas.setEnabled(false);
                    texValTotal.setEnabled(false);
                    texValTotal.setEnabled(false);
                    texQtDeMidFis.setText(estoque);
                    texQtEmEstoque.setText(quantidade);
                    texTotalVendas.setText (auxContMid);
                    texValTotal.setText(preco2);
                    texValTotal.setText(preco2);            
                }
                else{
                    JOptionPane.showMessageDialog(null, "Este jogo nao foi encontrado.");
                }
            }
        
            catch(FileNotFoundException ex){
                JOptionPane.showMessageDialog(null, "Ocorreu um erro na manipulação do arquivo");
            }
            catch(IOException e){
                JOptionPane.showMessageDialog(null, "Ocorreu um erro na manipulação do arquivo");
            } 
            catch (ClassNotFoundException ex) {
                Logger.getLogger(gerarRelatorio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         }
    */
    }//GEN-LAST:event_pesquisarActionPerformed

    private void JCNomeJogosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCNomeJogosActionPerformed
    }//GEN-LAST:event_JCNomeJogosActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
       try {
            FileInputStream fips = new FileInputStream("dadosJogo.txt");
            ObjectInputStream obj = new ObjectInputStream(fips);

            jogos = (ArrayList<Jogo>) obj.readObject();//Carrega o arquivo txt no arrayList

            for (Jogo game : jogos) {
                JCNomeJogos.addItem(game.getNome());
            }

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro na manipulação do arquivo");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Ocorreu um erro na manipulação do arquivo");

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(gerarRelatorio.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formComponentShown

    private void texTotalVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_texTotalVendasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_texTotalVendasActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gerarRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gerarRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gerarRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gerarRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gerarRelatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JCNomeJogos;
    private javax.swing.JButton cancelar;
    private javax.swing.JLabel nomeDoJogo;
    private javax.swing.JButton pesquisar;
    private javax.swing.JLabel qtDeMidFis;
    private javax.swing.JLabel qtEmEstoque;
    private javax.swing.JLabel relatorioDeVendas;
    private javax.swing.JButton salvar;
    private javax.swing.JTextField texQtDeMidFis;
    private javax.swing.JTextField texQtEmEstoque;
    private javax.swing.JTextField texTotalVendas;
    private javax.swing.JTextField texValTotal;
    private javax.swing.JLabel totalVendas;
    private javax.swing.JLabel valTotalVendas;
    // End of variables declaration//GEN-END:variables
}