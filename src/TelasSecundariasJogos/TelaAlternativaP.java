/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TelasSecundariasJogos;

import codigo.Jogo;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yasmi_78vs0ei
 */
public class TelaAlternativaP extends javax.swing.JFrame {

    Jogo j;

    /**
     * Creates new form TelaAlternativaP
     */
    public TelaAlternativaP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxSelecao = new javax.swing.JComboBox<>();
        jTextFieldInfoProcura = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonPESQUISAR = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jComboBoxSelecao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NOME ", "CATEGORIA ", "DESENVOLVEDORA" }));
        jComboBoxSelecao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSelecaoActionPerformed(evt);
            }
        });

        jTextFieldInfoProcura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInfoProcuraActionPerformed(evt);
            }
        });

        jLabel1.setText("SELECIONE");

        jLabel2.setText("DIGITE");

        jButtonPESQUISAR.setText("PESQUISAR");
        jButtonPESQUISAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPESQUISARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxSelecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldInfoProcura, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(126, 126, 126)
                .addComponent(jButtonPESQUISAR, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldInfoProcura, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSelecao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonPESQUISAR, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldInfoProcuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInfoProcuraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldInfoProcuraActionPerformed

    private void jComboBoxSelecaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSelecaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSelecaoActionPerformed

    private void jButtonPESQUISARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPESQUISARActionPerformed
        // TODO add your handling code here:
        String tipo = jComboBoxSelecao.getSelectedItem().toString();
        String pesquisar = jTextFieldInfoProcura.getText();
        System.out.println(tipo);
        System.out.println(pesquisar);
        ArrayList<Jogo> jogosArray = new ArrayList<>();

        int aux = 0;

        String nome = "";
        String censura = "";
        String categoria = "";
        String desenvolvedora = "";
        String descricao = "";
        String quantidade = "";
        String preco = "";

        ArrayList<Jogo> vetJogo = new ArrayList<>();
        switch (tipo) {
            case "NOME":
                
                    try {
                    FileInputStream fileinput = new FileInputStream("dadosJogo.txt");
                    ObjectInputStream input = new ObjectInputStream(fileinput);
                    //guarda o que foi lido no arrayList
                    vetJogo = (ArrayList<Jogo>) input.readObject();
                    TelaTabelaJogo tabela = new TelaTabelaJogo();
                    DefaultTableModel envia = (DefaultTableModel) tabela.getTabelaJogo().getModel();
                    //Jogo j = new Jogo(nome, censura, categoria, desenvolvedora, descricao, quantidade, preco);
                    for (Jogo jogo : vetJogo) {
                        if (jogo.getNome().equals(pesquisar)) {
                            jogosArray.add(jogo);

                        }

                    }

                    for (int i = 0; i < jogosArray.size(); i++) {
                                Object[] jogos = {
                                    jogosArray.get(i).getNome(),
                                    jogosArray.get(i).getDesenvolvedora(),
                                    jogosArray.get(i).getCategoria(),
                                    jogosArray.get(i).getCensura(),
                                    jogosArray.get(i).getDescricao(),
                                    jogosArray.get(i).getQuantidade(),
                                    jogosArray.get(i).getPreco()};

                                envia.addRow(jogos);
                            }

                    tabela.setVisible(true);
                    input.close();
                } catch (IOException | ClassNotFoundException e1) {
                }

                break;
            case "CATEGORIA":
                
                    try {
                    FileInputStream fileinput = new FileInputStream("dadosJogo.txt");
            //guarda o que foi lido no arrayList
            try (ObjectInputStream input = new ObjectInputStream(fileinput)) {
                //guarda o que foi lido no arrayList
                vetJogo = (ArrayList<Jogo>) input.readObject();
                TelaTabelaJogo tabela = new TelaTabelaJogo();
                DefaultTableModel envia = (DefaultTableModel) tabela.getTabelaJogo().getModel();
                //Jogo j = new Jogo(nome, censura, categoria, desenvolvedora, descricao, quantidade, preco);
                for (Jogo jogo : vetJogo) {
                    if (jogo.getCategoria().equals(pesquisar)) {
                        jogosArray.add(jogo);
                        
                    }
                    
                }
                
                for (int i = 0; i < jogosArray.size(); i++) {
                    Object[] jogos = {
                        jogosArray.get(i).getNome(),
                        jogosArray.get(i).getDesenvolvedora(),
                        jogosArray.get(i).getCategoria(),
                        jogosArray.get(i).getCensura(),
                        jogosArray.get(i).getDescricao(),
                        jogosArray.get(i).getQuantidade(),
                        jogosArray.get(i).getPreco()};
                    
                    envia.addRow(jogos);
                }
                
                tabela.setVisible(true);
            }
                } catch (IOException | ClassNotFoundException e1) {
                }

                break;

            case "DESENVOLVEDORA":

                try {
                    FileInputStream fileinput = new FileInputStream("dadosJogo.txt");
                    ObjectInputStream input = new ObjectInputStream(fileinput);
                    //guarda o que foi lido no arrayList
                    vetJogo = (ArrayList<Jogo>) input.readObject();
                    TelaTabelaJogo tabela = new TelaTabelaJogo();
                    DefaultTableModel envia = (DefaultTableModel) tabela.getTabelaJogo().getModel();
                    //Jogo j = new Jogo(nome, censura, categoria, desenvolvedora, descricao, quantidade, preco);
                    for (Jogo jogo : vetJogo) {
                        if (jogo.getDesenvolvedora().equals(pesquisar)) {
                            jogosArray.add(jogo);

                        }

                    }

                    for (int i = 0; i < jogosArray.size(); i++) {
                                Object[] jogos = {
                                    jogosArray.get(i).getNome(),
                                    jogosArray.get(i).getDesenvolvedora(),
                                    jogosArray.get(i).getCategoria(),
                                    jogosArray.get(i).getCensura(),
                                    jogosArray.get(i).getDescricao(),
                                    jogosArray.get(i).getQuantidade(),
                                    jogosArray.get(i).getPreco()};

                                envia.addRow(jogos);
                            }

                    tabela.setVisible(true);
                    input.close();
                } catch (IOException | ClassNotFoundException e1) {
                }

                break;

            default:
                break;
        }
    }//GEN-LAST:event_jButtonPESQUISARActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAlternativaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAlternativaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAlternativaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAlternativaP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAlternativaP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPESQUISAR;
    private javax.swing.JComboBox<String> jComboBoxSelecao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextFieldInfoProcura;
    // End of variables declaration//GEN-END:variables
}
